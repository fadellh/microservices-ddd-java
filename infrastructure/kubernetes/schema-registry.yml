apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      enableServiceLinks: false
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:7.3.0
          env:
            # Koneksi ke Kafka
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://my-kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
            - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
              value: "PLAINTEXT"

            # Waktu tunggu inisialisasi
            - name: SCHEMA_REGISTRY_KAFKASTORE_INIT_TIMEOUT
              value: "60000"

            # Set replication factor topik _schemas
            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
              value: "3"

            # Debug
            # - name: SCHEMA_REGISTRY_DEBUG
            #   value: "true"
            # - name: SCHEMA_REGISTRY_LOG4J_LOGGERS
            #   value: "org.apache.kafka=DEBUG,io.confluent=DEBUG,org.reflections=ERROR"

            # Listeners
            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: "schema-registry"

            # Nama topik schemas & compatibility
            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
              value: "_schemas"
            - name: SCHEMA_REGISTRY_COMPATIBILITY_LEVEL
              value: "BACKWARD"

          ports:
            - containerPort: 8081

---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
  namespace: kafka
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: schema-registry
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: schema-registry-ingress
  namespace: kafka
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: letsencrypt-dev
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  tls:
    - hosts:
        - "schema-registry.fadellh.com"
      secretName: web-ssl-wrqdc
  rules:
    - host: schema-registry.fadellh.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: schema-registry
                port:
                  number: 8081
